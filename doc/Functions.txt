appUtils
Read configurable parameters from INI file	def config(filename:str) -> configparser:	
Setup application & database level logging 	def logSetup(logcfg:str, logloc:str, echo:bool) -> logging.Logger:

dbFunctions
Insert records into database table			def dbInsertAll(engine:sqlalchemy.engine, tblName:str, data:Base, verbose:bool) -> int:
Select all records from a database table	def dbSelectAll(engine:Session, tblName:Base, verbose:bool) -> list:
Update records in a database table			def dbUpdateAll(engine:Session, tblName:Base, updAttr:str, updVal:str, verbose:bool) -> int:
Delete all records from table				def dbDeleteAll(engine:Session, tblName:Base, verbose:bool) -> int:

Insert record into database table 			def dbInsert(engine:Session, data:Base, verbose:bool) -> int:
Select records from a database table		def dbSelect(engine:Session, tblName:Base, filters:dict, verbose:bool) -> list:
Update filtered records in a database table def dbUpdate(engine:Session, tblName:Base, filters:dict, updAttr:str, updVal:str, verbose:bool) -> int:
Delete records from a database table		def dbDelete(engine:Session, tblName:Base, filters:dict, verbose:bool) -> int:

dbUtils
Create database shell						def dbInit(engine:sqlalchemy.engine) -> bool:
Drop & reload sample data from samples		def dbFill(engine:sqlalchemy.engine, seed:str, dbName:str, verbose:bool) -> bool:
Delete database								def dbKill(filename:str) -> bool:

csvHelper
Read CSV file								def csvRead(filename:str, verbose:bool) -> list:
Write CSV file								def csvWrite(filename:str, data:list, verbose:bool) -> bool:
Read CSV file to dictionary					def csvDictReader(filename:str, verbose:bool) -> list:
Write CSV file from dictionary 				def csvDictWriter(filename:str, data:dict, verbose:bool) -> bool: