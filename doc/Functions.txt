appUtils
	Read parameters from INI file				def config(filename:str) -> configparser:
	Setup application logging 					def logSetup(logcfg:str, logloc:str, echo:bool) -> logging.Logger:
	
dbUtils
	Create database shell						def dbInit(engine:sqlalchemy.engine) -> bool:
	Reload sample data from samples				def dbFill(engine:sqlalchemy.engine, seed:str, database:str, verbose:bool) -> bool:
	Delete database								def dbKill(filename:str) -> bool:

dbFunctions
	Insert all records into database table		def dbInsertAll(engine:Session, tablename:str, data:Base, verbose:bool) -> int:
	Select all records from a database table	def dbSelectAll(engine:Session, tablename:Base, verbose:bool) -> list:
	Update all records in a database table		def dbUpdateAll(engine:Session, tablename:Base, updAttr:str, updVal:str, verbose:bool) -> int:
	Delete all records from table				def dbDeleteAll(engine:Session, tablename:Base, verbose:bool) -> int:

	Insert record into database table 			def dbInsert(engine:Session, data:Base, verbose:bool) -> int:
	Select records from a database table		def dbSelect(engine:Session, tablename:Base, filters:dict, verbose:bool) -> list:
	Update records in a database table 			def dbUpdate(engine:Session, tablename:Base, filters:dict, updAttr:str, updVal:str, verbose:bool) -> int:
	Delete records from a database table		def dbDelete(engine:Session, tablename:Base, filters:dict, verbose:bool) -> int:

csvHelper
	Read CSV file								def csvRead(filename:str) -> list:
	Write CSV file								def csvWrite(filename:str, data:list) -> bool:
	Read CSV file to dictionary					def csvDictReader(filename:str) -> list:
	Write CSV file from dictionary 				def csvDictWriter(filename:str, data:dict) -> bool: